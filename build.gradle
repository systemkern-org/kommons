buildscript {
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-noarg:1.3.30"
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.3.30'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.30'
    id 'signing'
    id 'maven'
}

apply plugin: "kotlin-jpa"

group = 'com.systemkern'
version = '0.6-SNAPSHOT'
description = 'kommons'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation(
            'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.30',
            'org.jetbrains.kotlin:kotlin-reflect:1.3.30',
            'org.springframework.boot:spring-boot-starter-data-jpa:2.1.4.RELEASE',
            'javax.persistence:javax.persistence-api:2.2',
            'org.springframework.data:spring-data-commons:2.1.8.RELEASE'
    )
    testImplementation(
            'com.h2database:h2:1.4.199',
            'org.springframework.boot:spring-boot-starter-test:2.1.4.RELEASE',
            'org.jetbrains.kotlin:kotlin-test-junit:1.3.30',
            'org.assertj:assertj-core:3.9.1',
            'org.junit.jupiter:junit-jupiter-api:5.3.2'
    )
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.3.2')
}

//--------- Tasks section -------

// Added becuase kommons has no main class
bootJar {
    enabled = false
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// Compile all test classes with java 1.8
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

//execute tests with jUnit platform
test { 
    useJUnitPlatform()
}

artifacts {
    archives javadocJar, sourcesJar
}

//------------------------------------//

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {

            // Sign POM
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            // Destination
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            // Add required metadata to POM
            pom.project {
                name 'kommons'
                packaging 'jar'
                description 'Commonly used extensions in Kotlin'
                url 'https://github.com/systemkern/kommons/'

                scm {
                    connection 'https://github.com/systemkern/kommons.git'
                    developerConnection 'https://github.com/systemkern/kommons'
                    url 'https://systemkern.github.io/kommons/'
                }

                licenses {
                    license {
                        name 'Unlicense'
                        url 'http://unlicense.org'
                    }
                }

                developers {
                    developer {
                        id 'rainer'
                        name 'Rainer Kern'
                        email 'rainer@systemkern.com'
                        organization 'systemkern'
                    }
                    developer {
                        id 'andres'
                        name 'Andres Ausecha'
                        email 'andres@systemkern.com'
                        organization 'systemkern'
                    }
                }
            }
        }
    }
}
